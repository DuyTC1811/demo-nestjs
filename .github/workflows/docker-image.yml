name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-presen

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile', '**/*.dockerignore') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build and push Docker image
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
          -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/demo1:latest --push .

  deployment:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    name: Deploy to Server
    steps:
      - uses: actions/checkout@v3
      - name: Execute SSH commmands on remote server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > keypair.pem && chmod 600 keypair.pem
          ssh -o StrictHostKeyChecking=no -i keypair.pem ${{ secrets.SSH_HOST }} '
          docker pull docker.io/duytc81811/demo1:latest
          docker ps -a --filter "ancestor=duytc81811/demo1:latest" -q | xargs -r docker rm -f
          docker rmi duytc81811/demo1:latest
          docker-compose -f docker-compose.yml up -d
