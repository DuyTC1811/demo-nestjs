name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'                   # Ch·ªâ ch·∫°y khi code ƒë∆∞·ª£c merge v√†o main
    name: Deploy to Server

    steps:
      # Clone m√£ ngu·ªìn
      - name: Checkout repository
        uses: actions/checkout@v4

      # Th·ª±c hi·ªán deploy qua SSH
      - name: Execute SSH commands on remote server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > keypair.pem && chmod 600 keypair.pem
          ssh -o StrictHostKeyChecking=no -i keypair.pem ${{ secrets.SSH_HOST }} '
          docker compose -f docker-compose.yml pull &&
          docker compose -f docker-compose.yml up -d --remove-orphans'

      # G·ª≠i th√¥ng b√°o Telegram Success
      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        if: success()
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üéâ Deployment Succeeded!
            - Pull Request By: ${{ github.event.pull_request.user.login }}
            - Title: ${{ github.event.pull_request.title }}

      # G·ª≠i th√¥ng b√°o Telegram N·∫øu Failure
      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚ùå Deployment Failure!
            - Pull Request By: ${{ github.event.pull_request.user.login }}
            - Title: ${{ github.event.pull_request.title }}
