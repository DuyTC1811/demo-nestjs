name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # B∆∞·ªõc 1: Clone m√£ ngu·ªìn
      -
        name: Checkout repository
        uses: actions/checkout@v4

      # B∆∞·ªõc 2: Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng Node.js
      -
        name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # B∆∞·ªõc 3: Cache th∆∞ vi·ªán Node.js
      -
        name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      # B∆∞·ªõc 4: C√†i ƒë·∫∑t dependencies
      -
        name: Install dependencies
        run: npm ci

      # B∆∞·ªõc 5: Build ·ª©ng d·ª•ng
      -
        name: Build application
        run: npm run build --if-present

      # B∆∞·ªõc 6: ƒêƒÉng nh·∫≠p v√†o Docker Hub
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: duytc81811/demo:latest

#      # B∆∞·ªõc 9: G·ª≠i th√¥ng b√°o Telegram khi th·∫•t b·∫°i
#      - name: Notify Telegram
#        uses: appleboy/telegram-action@master
#        if: failure()
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: |
#            ‚ùå **Build failed!**
#            - Pull Request By: ${{ github.event.pull_request.user.login }}
#            - Title: ${{ github.event.pull_request.title }}

#  deployment:
#    runs-on: ubuntu-latest
#    needs: build-and-push-docker                          # Ch·ªâ ch·∫°y khi job 'build-and-push-docker' th√†nh c√¥ng
#    name: Deploy to Server
#
#    steps:
#      # Clone m√£ ngu·ªìn
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      # Th·ª±c hi·ªán deploy qua SSH
#      - name: Execute SSH commands on remote server
#        run: |
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > keypair.pem && chmod 600 keypair.pem
#          ssh -o StrictHostKeyChecking=no -i keypair.pem ${{ secrets.SSH_HOST }} '
#          docker compose -f docker-compose.yml pull &&
#          docker compose -f docker-compose.yml up -d --remove-orphans'
#
#      # G·ª≠i th√¥ng b√°o Telegram Success
#      - name: Notify Telegram
#        uses: appleboy/telegram-action@master
#        if: success()
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: |
#            üéâ Deployment Succeeded!
#            - Pull Request By: ${{ github.event.pull_request.user.login }}
#            - Title: ${{ github.event.pull_request.title }}
#
#      # G·ª≠i th√¥ng b√°o Telegram N·∫øu Failure
#      - name: Notify Telegram
#        uses: appleboy/telegram-action@master
#        if: failure()
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: |
#            ‚ùå Deployment Failure!
#            - Pull Request By: ${{ github.event.pull_request.user.login }}
#            - Title: ${{ github.event.pull_request.title }}
